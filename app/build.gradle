plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id "kotlin-parcelize"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.bikcodeh.myapplication'
    compileSdk 33

    defaultConfig {
        applicationId "com.bikcodeh.myapplication"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "WEATHER_API", getProps("WEATHER_API")
        }
        debug {
            buildConfigField "String", "WEATHER_API", getProps("WEATHER_API")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

kapt {
    correctErrorTypes true
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName].toString()
    } else {
        return ""
    }
}

dependencies {

    implementation libs.core.ktx
    implementation libs.lifecycle.runtime
    implementation libs.runtime.compose
    implementation libs.activity.compose
    implementation libs.compose.ui
    implementation libs.compose.constraint.layout
    implementation libs.compose.ui.tooling
    implementation libs.compose.tooling.preview
    implementation libs.material3.compose
    implementation libs.navigation.compose
    implementation libs.hilt.navigation.compose
    implementation libs.hilt.android
    implementation libs.timber
    implementation libs.splash.api
    kapt libs.hilt.compiler
    implementation libs.service.location
    implementation libs.easy.permission
    implementation libs.crashlytics
    implementation libs.accompanist.permissions
    implementation libs.accompanist.insets

    /** Network */
    implementation libs.retrofit
    implementation libs.okHttp
    implementation libs.okhttplogginginterceptor
    implementation libs.moshi
    implementation libs.moshi.kotlin
}